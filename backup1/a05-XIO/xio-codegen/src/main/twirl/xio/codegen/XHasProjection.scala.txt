@(maxItem: Int)

package xio

trait XHasAlias {

    type XHas0 = nat.has.NatZero
    type XHas1[T1] = nat.has.NatPositive[nat.has.NatZero, T1]
    type XHasM1[T1 <: nat.has.Nat] = T1
    @for(i <- 2 to maxItem) {
        type XHas@{i}[@for(ii <- 1 to i) { @if(ii > 1) { , } T@{ii} }] = nat.has.NatPositive[XHas@{i - 1}[@for(ii <- 2 to i) { @if(ii > 2) { , } T@{ii} }], T1]
        type XHasM@{i}[@for(ii <- 1 to i) { @if(ii > 1) { , } T@{ii} <: nat.has.Nat }] = @for(ii <- 1 to i) { @if(ii > 1) { #Plus[ } T@{ii} @if(ii > 1) { ] } }
    }
    val XHas0: XHas0 = nat.has.NatZero
    object XHas1 {
        def apply[T1](t1: T1): XHas1[T1] = new nat.has.NatPositive(nat.has.NatZero, t1)
        def fromTuple[T1](t: Tuple1[T1]): XHas1[T1] = apply(t._1)
    }
    @for(i <- 2 to maxItem) {
        object XHas@{i} {
            def apply[@for(ii <- 1 to i) { @if(ii > 1) { , } T@{ii} }](@for(ii <- 1 to i) { @if(ii > 1) { , } _@{ii}: T@{ii} }): XHas@{i}[@for(ii <- 1 to i) { @if(ii > 1) { , } T@{ii} }] = new nat.has.NatPositive(tail = XHas@{i - 1}(@for(ii <- 2 to i) { @if(ii > 2) { , } _@{ii} }) , head = _1)
            def fromTuple[@for(ii <- 1 to i) { @if(ii > 1) { , } T@{ii} }](i: (@for(ii <- 1 to i) { @if(ii > 1) { , } T@{ii} })): XHas@{i}[@for(ii <- 1 to i) { @if(ii > 1) { , } T@{ii} }] = apply(@for(ii <- 1 to i) { @if(ii > 1) { , } _@{ii} = i._@{ii} })
        }
    }
    implicit class XHasTuple1ImplicitClass[T1](private val has: XHas1[T1]) {
        def replace_0[T](i: T): XHas1[T] = XHas1(i)
    }
    @for(i <- 2 to maxItem) {
        implicit class XHasTuple@{i}ImplicitClass[@for(ii <- 1 to i) { @if(ii > 1) { , } T@{ii} }](private val has: XHas@{i}[@for(ii <- 1 to i) { @if(ii > 1) { , } T@{ii} }]) {
            def replace_0[T](i: T): XHas@{i}[T @for(ii <- 2 to i) { , T@{ii} }] = new xio.nat.has.NatPositive(has.tail, i)
            @for(ii <- 1 to i - 1) {
                def replace_@{ii}[T](i: T): XHas@{i}[@for(iii <- 1 to i) { @if(iii > 1) { , } @if(ii == iii - 1) { T } else { T@{iii} } }] = new xio.nat.has.NatPositive(has.tail.replace_@{ii - 1}(i), has.head)
            }
        }
    }

}
