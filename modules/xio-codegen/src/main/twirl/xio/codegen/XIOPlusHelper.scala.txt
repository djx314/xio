@(maxItem: Int)

package xio.helper

object XIOPlusHelper {

    def takePlus1[I <: xio.nat.has.Nat, I1 <: xio.nat.has.Nat](
        i1: xio.nat.has.NatReversePlus[I1, I]
    ): xio.XHasM2[I, I1] => I1 = i => i1.takeTail(i)

    @for(i <- 2 to maxItem) {
        def takePlus@{i}[I <: xio.nat.has.Nat @for(ii <- 1 to i) { , I@{ii} <: xio.nat.has.Nat }](
            @for(ii <- 1 to i) { @if(ii > 1) { , } i@{ii}: xio.nat.has.NatReversePlus[I@{ii}, xio.XHasM@{ii}[I @for(iii <- 1 to ii - 1) { , I@{iii} } ]] }
        ): xio.XHasM2[xio.XHasM@{i}[I @for(ii <- 1 to i - 1) { , I@{ii} }], I@{i}] => I1 =
        i => takePlus@{i - 1}(@for(ii <- 1 to i - 1) { @if(ii > 1) { , } i@{ii} })(i@{i}.takeHead(i))
    }

    def take1Plus1[I <: xio.nat.has.Nat, I1 <: xio.nat.has.Nat](
        i1: xio.nat.has.NatReversePlus[I1, I]
    ): xio.XHasM2[I, I1] => I = (i => i1.takeHead(i))

    @for(i <- 2 to maxItem) {
        def take1Plus@{i}[I <: xio.nat.has.Nat @for(ii <- 1 to i) { , I@{ii} <: xio.nat.has.Nat }](
            @for(ii <- 1 to i) { @if(ii > 1) { , } i@{ii}: xio.nat.has.NatReversePlus[I@{ii}, xio.XHasM@{ii}[I @for(iii <- 1 to ii - 1) { , I@{iii} } ]] }
        ): xio.XHasM2[xio.XHasM@{i}[I @for(ii <- 1 to i - 1) { , I@{ii} }], I@{i}] => I =
        i => take1Plus@{i - 1}(@for(ii <- 1 to i - 1) { @if(ii > 1) { , } i@{ii} })(i@{i}.takeHead(i))
    }

}
